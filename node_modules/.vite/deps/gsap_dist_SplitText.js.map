{
  "version": 3,
  "sources": ["../../gsap/dist/SplitText.js"],
  "sourcesContent": ["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(global = global || self, factory(global.window = global.window || {}));\n}(this, (function (exports) { 'use strict';\n\n\tvar emojiExp = /([\\uD800-\\uDBFF][\\uDC00-\\uDFFF](?:[\\u200D\\uFE0F][\\uD800-\\uDBFF][\\uDC00-\\uDFFF]){2,}|\\uD83D\\uDC69(?:\\u200D(?:(?:\\uD83D\\uDC69\\u200D)?\\uD83D\\uDC67|(?:\\uD83D\\uDC69\\u200D)?\\uD83D\\uDC66)|\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC69\\u200D)?\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC69\\u200D)?\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]\\uFE0F|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC6F\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3C-\\uDD3E\\uDDD6-\\uDDDF])\\u200D[\\u2640\\u2642]\\uFE0F|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF6\\uD83C\\uDDE6|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uFE0F\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642])\\uFE0F|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\uD83D\\uDC69\\u200D[\\u2695\\u2696\\u2708]|\\uD83D\\uDC68(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708]))\\uFE0F|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83D\\uDC69\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69]))|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67)\\uDB40\\uDC7F|\\uD83D\\uDC68(?:\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D)?\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D)?\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92])|(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]))|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDD1-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC68(?:\\u200D(?:(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D)?\\uD83D\\uDC67|(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D)?\\uD83D\\uDC66)|\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC69\\uDC6E\\uDC70-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3D\\uDD3E\\uDDD1-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])?|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDEEB\\uDEEC\\uDEF4-\\uDEF8]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD4C\\uDD50-\\uDD6B\\uDD80-\\uDD97\\uDDC0\\uDDD0-\\uDDE6])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEF8]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD4C\\uDD50-\\uDD6B\\uDD80-\\uDD97\\uDDC0\\uDDD0-\\uDDE6])\\uFE0F)/;\n\tfunction getText(e) {\n\t  var type = e.nodeType,\n\t      result = \"\";\n\n\t  if (type === 1 || type === 9 || type === 11) {\n\t    if (typeof e.textContent === \"string\") {\n\t      return e.textContent;\n\t    } else {\n\t      for (e = e.firstChild; e; e = e.nextSibling) {\n\t        result += getText(e);\n\t      }\n\t    }\n\t  } else if (type === 3 || type === 4) {\n\t    return e.nodeValue;\n\t  }\n\n\t  return result;\n\t}\n\n\t/*!\n\t * SplitText: 3.12.2\n\t * https://greensock.com\n\t *\n\t * @license Copyright 2008-2023, GreenSock. All rights reserved.\n\t * Subject to the terms at https://greensock.com/standard-license or for\n\t * Club GreenSock members, the agreement issued with that membership.\n\t * @author: Jack Doyle, jack@greensock.com\n\t*/\n\n\tvar _doc,\n\t    _win,\n\t    _coreInitted,\n\t    gsap,\n\t    _context,\n\t    _toArray,\n\t    _stripExp = /(?:\\r|\\n|\\t\\t)/g,\n\t    _multipleSpacesExp = /(?:\\s\\s+)/g,\n\t    _initCore = function _initCore(core) {\n\t  _doc = document;\n\t  _win = window;\n\t  gsap = gsap || core || _win.gsap || console.warn(\"Please gsap.registerPlugin(SplitText)\");\n\n\t  if (gsap) {\n\t    _toArray = gsap.utils.toArray;\n\n\t    _context = gsap.core.context || function () {};\n\n\t    _coreInitted = 1;\n\t  }\n\t},\n\t    _getComputedStyle = function _getComputedStyle(element) {\n\t  return _win.getComputedStyle(element);\n\t},\n\t    _isAbsolute = function _isAbsolute(vars) {\n\t  return vars.position === \"absolute\" || vars.absolute === true;\n\t},\n\t    _findSpecialChars = function _findSpecialChars(text, chars) {\n\t  var i = chars.length,\n\t      s;\n\n\t  while (--i > -1) {\n\t    s = chars[i];\n\n\t    if (text.substr(0, s.length) === s) {\n\t      return s.length;\n\t    }\n\t  }\n\t},\n\t    _divStart = \" style='position:relative;display:inline-block;'\",\n\t    _cssClassFunc = function _cssClassFunc(cssClass, tag) {\n\t  if (cssClass === void 0) {\n\t    cssClass = \"\";\n\t  }\n\n\t  var iterate = ~cssClass.indexOf(\"++\"),\n\t      num = 1;\n\n\t  if (iterate) {\n\t    cssClass = cssClass.split(\"++\").join(\"\");\n\t  }\n\n\t  return function () {\n\t    return \"<\" + tag + _divStart + (cssClass ? \" class='\" + cssClass + (iterate ? num++ : \"\") + \"'>\" : \">\");\n\t  };\n\t},\n\t    _swapText = function _swapText(element, oldText, newText) {\n\t  var type = element.nodeType;\n\n\t  if (type === 1 || type === 9 || type === 11) {\n\t    for (element = element.firstChild; element; element = element.nextSibling) {\n\t      _swapText(element, oldText, newText);\n\t    }\n\t  } else if (type === 3 || type === 4) {\n\t    element.nodeValue = element.nodeValue.split(oldText).join(newText);\n\t  }\n\t},\n\t    _pushReversed = function _pushReversed(a, merge) {\n\t  var i = merge.length;\n\n\t  while (--i > -1) {\n\t    a.push(merge[i]);\n\t  }\n\t},\n\t    _isBeforeWordDelimiter = function _isBeforeWordDelimiter(e, root, wordDelimiter) {\n\t  var next;\n\n\t  while (e && e !== root) {\n\t    next = e._next || e.nextSibling;\n\n\t    if (next) {\n\t      return next.textContent.charAt(0) === wordDelimiter;\n\t    }\n\n\t    e = e.parentNode || e._parent;\n\t  }\n\t},\n\t    _deWordify = function _deWordify(e) {\n\t  var children = _toArray(e.childNodes),\n\t      l = children.length,\n\t      i,\n\t      child;\n\n\t  for (i = 0; i < l; i++) {\n\t    child = children[i];\n\n\t    if (child._isSplit) {\n\t      _deWordify(child);\n\t    } else {\n\t      if (i && child.previousSibling && child.previousSibling.nodeType === 3) {\n\t        child.previousSibling.nodeValue += child.nodeType === 3 ? child.nodeValue : child.firstChild.nodeValue;\n\t        e.removeChild(child);\n\t      } else if (child.nodeType !== 3) {\n\t        e.insertBefore(child.firstChild, child);\n\t        e.removeChild(child);\n\t      }\n\t    }\n\t  }\n\t},\n\t    _getStyleAsNumber = function _getStyleAsNumber(name, computedStyle) {\n\t  return parseFloat(computedStyle[name]) || 0;\n\t},\n\t    _setPositionsAfterSplit = function _setPositionsAfterSplit(element, vars, allChars, allWords, allLines, origWidth, origHeight) {\n\t  var cs = _getComputedStyle(element),\n\t      paddingLeft = _getStyleAsNumber(\"paddingLeft\", cs),\n\t      lineOffsetY = -999,\n\t      borderTopAndBottom = _getStyleAsNumber(\"borderBottomWidth\", cs) + _getStyleAsNumber(\"borderTopWidth\", cs),\n\t      borderLeftAndRight = _getStyleAsNumber(\"borderLeftWidth\", cs) + _getStyleAsNumber(\"borderRightWidth\", cs),\n\t      padTopAndBottom = _getStyleAsNumber(\"paddingTop\", cs) + _getStyleAsNumber(\"paddingBottom\", cs),\n\t      padLeftAndRight = _getStyleAsNumber(\"paddingLeft\", cs) + _getStyleAsNumber(\"paddingRight\", cs),\n\t      lineThreshold = _getStyleAsNumber(\"fontSize\", cs) * (vars.lineThreshold || 0.2),\n\t      textAlign = cs.textAlign,\n\t      charArray = [],\n\t      wordArray = [],\n\t      lineArray = [],\n\t      wordDelimiter = vars.wordDelimiter || \" \",\n\t      tag = vars.tag ? vars.tag : vars.span ? \"span\" : \"div\",\n\t      types = vars.type || vars.split || \"chars,words,lines\",\n\t      lines = allLines && ~types.indexOf(\"lines\") ? [] : null,\n\t      words = ~types.indexOf(\"words\"),\n\t      chars = ~types.indexOf(\"chars\"),\n\t      absolute = _isAbsolute(vars),\n\t      linesClass = vars.linesClass,\n\t      iterateLine = ~(linesClass || \"\").indexOf(\"++\"),\n\t      spaceNodesToRemove = [],\n\t      isFlex = cs.display === \"flex\",\n\t      prevInlineDisplay = element.style.display,\n\t      i,\n\t      j,\n\t      l,\n\t      node,\n\t      nodes,\n\t      isChild,\n\t      curLine,\n\t      addWordSpaces,\n\t      style,\n\t      lineNode,\n\t      lineWidth,\n\t      offset;\n\n\t  iterateLine && (linesClass = linesClass.split(\"++\").join(\"\"));\n\t  isFlex && (element.style.display = \"block\");\n\t  j = element.getElementsByTagName(\"*\");\n\t  l = j.length;\n\t  nodes = [];\n\n\t  for (i = 0; i < l; i++) {\n\t    nodes[i] = j[i];\n\t  }\n\n\t  if (lines || absolute) {\n\t    for (i = 0; i < l; i++) {\n\t      node = nodes[i];\n\t      isChild = node.parentNode === element;\n\n\t      if (isChild || absolute || chars && !words) {\n\t        offset = node.offsetTop;\n\n\t        if (lines && isChild && Math.abs(offset - lineOffsetY) > lineThreshold && (node.nodeName !== \"BR\" || i === 0)) {\n\t          curLine = [];\n\t          lines.push(curLine);\n\t          lineOffsetY = offset;\n\t        }\n\n\t        if (absolute) {\n\t          node._x = node.offsetLeft;\n\t          node._y = offset;\n\t          node._w = node.offsetWidth;\n\t          node._h = node.offsetHeight;\n\t        }\n\n\t        if (lines) {\n\t          if (node._isSplit && isChild || !chars && isChild || words && isChild || !words && node.parentNode.parentNode === element && !node.parentNode._isSplit) {\n\t            curLine.push(node);\n\t            node._x -= paddingLeft;\n\n\t            if (_isBeforeWordDelimiter(node, element, wordDelimiter)) {\n\t              node._wordEnd = true;\n\t            }\n\t          }\n\n\t          if (node.nodeName === \"BR\" && (node.nextSibling && node.nextSibling.nodeName === \"BR\" || i === 0)) {\n\t            lines.push([]);\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\n\t  for (i = 0; i < l; i++) {\n\t    node = nodes[i];\n\t    isChild = node.parentNode === element;\n\n\t    if (node.nodeName === \"BR\") {\n\t      if (lines || absolute) {\n\t        node.parentNode && node.parentNode.removeChild(node);\n\t        nodes.splice(i--, 1);\n\t        l--;\n\t      } else if (!words) {\n\t        element.appendChild(node);\n\t      }\n\n\t      continue;\n\t    }\n\n\t    if (absolute) {\n\t      style = node.style;\n\n\t      if (!words && !isChild) {\n\t        node._x += node.parentNode._x;\n\t        node._y += node.parentNode._y;\n\t      }\n\n\t      style.left = node._x + \"px\";\n\t      style.top = node._y + \"px\";\n\t      style.position = \"absolute\";\n\t      style.display = \"block\";\n\t      style.width = node._w + 1 + \"px\";\n\t      style.height = node._h + \"px\";\n\t    }\n\n\t    if (!words && chars) {\n\t      if (node._isSplit) {\n\t        node._next = j = node.nextSibling;\n\t        node.parentNode.appendChild(node);\n\n\t        while (j && j.nodeType === 3 && j.textContent === \" \") {\n\t          node._next = j.nextSibling;\n\t          node.parentNode.appendChild(j);\n\t          j = j.nextSibling;\n\t        }\n\t      } else if (node.parentNode._isSplit) {\n\t        node._parent = node.parentNode;\n\n\t        if (!node.previousSibling && node.firstChild) {\n\t          node.firstChild._isFirst = true;\n\t        }\n\n\t        if (node.nextSibling && node.nextSibling.textContent === \" \" && !node.nextSibling.nextSibling) {\n\t          spaceNodesToRemove.push(node.nextSibling);\n\t        }\n\n\t        node._next = node.nextSibling && node.nextSibling._isFirst ? null : node.nextSibling;\n\t        node.parentNode.removeChild(node);\n\t        nodes.splice(i--, 1);\n\t        l--;\n\t      } else if (!isChild) {\n\t        offset = !node.nextSibling && _isBeforeWordDelimiter(node.parentNode, element, wordDelimiter);\n\t        node.parentNode._parent && node.parentNode._parent.appendChild(node);\n\t        offset && node.parentNode.appendChild(_doc.createTextNode(\" \"));\n\n\t        if (tag === \"span\") {\n\t          node.style.display = \"inline\";\n\t        }\n\n\t        charArray.push(node);\n\t      }\n\t    } else if (node.parentNode._isSplit && !node._isSplit && node.innerHTML !== \"\") {\n\t      wordArray.push(node);\n\t    } else if (chars && !node._isSplit) {\n\t      if (tag === \"span\") {\n\t        node.style.display = \"inline\";\n\t      }\n\n\t      charArray.push(node);\n\t    }\n\t  }\n\n\t  i = spaceNodesToRemove.length;\n\n\t  while (--i > -1) {\n\t    spaceNodesToRemove[i].parentNode.removeChild(spaceNodesToRemove[i]);\n\t  }\n\n\t  if (lines) {\n\t    if (absolute) {\n\t      lineNode = _doc.createElement(tag);\n\t      element.appendChild(lineNode);\n\t      lineWidth = lineNode.offsetWidth + \"px\";\n\t      offset = lineNode.offsetParent === element ? 0 : element.offsetLeft;\n\t      element.removeChild(lineNode);\n\t    }\n\n\t    style = element.style.cssText;\n\t    element.style.cssText = \"display:none;\";\n\n\t    while (element.firstChild) {\n\t      element.removeChild(element.firstChild);\n\t    }\n\n\t    addWordSpaces = wordDelimiter === \" \" && (!absolute || !words && !chars);\n\n\t    for (i = 0; i < lines.length; i++) {\n\t      curLine = lines[i];\n\t      lineNode = _doc.createElement(tag);\n\t      lineNode.style.cssText = \"display:block;text-align:\" + textAlign + \";position:\" + (absolute ? \"absolute;\" : \"relative;\");\n\n\t      if (linesClass) {\n\t        lineNode.className = linesClass + (iterateLine ? i + 1 : \"\");\n\t      }\n\n\t      lineArray.push(lineNode);\n\t      l = curLine.length;\n\n\t      for (j = 0; j < l; j++) {\n\t        if (curLine[j].nodeName !== \"BR\") {\n\t          node = curLine[j];\n\t          lineNode.appendChild(node);\n\t          addWordSpaces && node._wordEnd && lineNode.appendChild(_doc.createTextNode(\" \"));\n\n\t          if (absolute) {\n\t            if (j === 0) {\n\t              lineNode.style.top = node._y + \"px\";\n\t              lineNode.style.left = paddingLeft + offset + \"px\";\n\t            }\n\n\t            node.style.top = \"0px\";\n\n\t            if (offset) {\n\t              node.style.left = node._x - offset + \"px\";\n\t            }\n\t          }\n\t        }\n\t      }\n\n\t      if (l === 0) {\n\t        lineNode.innerHTML = \"&nbsp;\";\n\t      } else if (!words && !chars) {\n\t        _deWordify(lineNode);\n\n\t        _swapText(lineNode, String.fromCharCode(160), \" \");\n\t      }\n\n\t      if (absolute) {\n\t        lineNode.style.width = lineWidth;\n\t        lineNode.style.height = node._h + \"px\";\n\t      }\n\n\t      element.appendChild(lineNode);\n\t    }\n\n\t    element.style.cssText = style;\n\t  }\n\n\t  if (absolute) {\n\t    if (origHeight > element.clientHeight) {\n\t      element.style.height = origHeight - padTopAndBottom + \"px\";\n\n\t      if (element.clientHeight < origHeight) {\n\t        element.style.height = origHeight + borderTopAndBottom + \"px\";\n\t      }\n\t    }\n\n\t    if (origWidth > element.clientWidth) {\n\t      element.style.width = origWidth - padLeftAndRight + \"px\";\n\n\t      if (element.clientWidth < origWidth) {\n\t        element.style.width = origWidth + borderLeftAndRight + \"px\";\n\t      }\n\t    }\n\t  }\n\n\t  isFlex && (prevInlineDisplay ? element.style.display = prevInlineDisplay : element.style.removeProperty(\"display\"));\n\n\t  _pushReversed(allChars, charArray);\n\n\t  words && _pushReversed(allWords, wordArray);\n\n\t  _pushReversed(allLines, lineArray);\n\t},\n\t    _splitRawText = function _splitRawText(element, vars, wordStart, charStart) {\n\t  var tag = vars.tag ? vars.tag : vars.span ? \"span\" : \"div\",\n\t      types = vars.type || vars.split || \"chars,words,lines\",\n\t      chars = ~types.indexOf(\"chars\"),\n\t      absolute = _isAbsolute(vars),\n\t      wordDelimiter = vars.wordDelimiter || \" \",\n\t      space = wordDelimiter !== \" \" ? \"\" : absolute ? \"&#173; \" : \" \",\n\t      wordEnd = \"</\" + tag + \">\",\n\t      wordIsOpen = 1,\n\t      specialChars = vars.specialChars ? typeof vars.specialChars === \"function\" ? vars.specialChars : _findSpecialChars : null,\n\t      text,\n\t      splitText,\n\t      i,\n\t      j,\n\t      l,\n\t      character,\n\t      hasTagStart,\n\t      testResult,\n\t      container = _doc.createElement(\"div\"),\n\t      parent = element.parentNode;\n\n\t  parent.insertBefore(container, element);\n\t  container.textContent = element.nodeValue;\n\t  parent.removeChild(element);\n\t  element = container;\n\t  text = getText(element);\n\t  hasTagStart = text.indexOf(\"<\") !== -1;\n\n\t  if (vars.reduceWhiteSpace !== false) {\n\t    text = text.replace(_multipleSpacesExp, \" \").replace(_stripExp, \"\");\n\t  }\n\n\t  if (hasTagStart) {\n\t    text = text.split(\"<\").join(\"{{LT}}\");\n\t  }\n\n\t  l = text.length;\n\t  splitText = (text.charAt(0) === \" \" ? space : \"\") + wordStart();\n\n\t  for (i = 0; i < l; i++) {\n\t    character = text.charAt(i);\n\n\t    if (specialChars && (testResult = specialChars(text.substr(i), vars.specialChars))) {\n\t      character = text.substr(i, testResult || 1);\n\t      splitText += chars && character !== \" \" ? charStart() + character + \"</\" + tag + \">\" : character;\n\t      i += testResult - 1;\n\t    } else if (character === wordDelimiter && text.charAt(i - 1) !== wordDelimiter && i) {\n\t      splitText += wordIsOpen ? wordEnd : \"\";\n\t      wordIsOpen = 0;\n\n\t      while (text.charAt(i + 1) === wordDelimiter) {\n\t        splitText += space;\n\t        i++;\n\t      }\n\n\t      if (i === l - 1) {\n\t        splitText += space;\n\t      } else if (text.charAt(i + 1) !== \")\") {\n\t        splitText += space + wordStart();\n\t        wordIsOpen = 1;\n\t      }\n\t    } else if (character === \"{\" && text.substr(i, 6) === \"{{LT}}\") {\n\t      splitText += chars ? charStart() + \"{{LT}}\" + \"</\" + tag + \">\" : \"{{LT}}\";\n\t      i += 5;\n\t    } else if (character.charCodeAt(0) >= 0xD800 && character.charCodeAt(0) <= 0xDBFF || text.charCodeAt(i + 1) >= 0xFE00 && text.charCodeAt(i + 1) <= 0xFE0F) {\n\t      j = ((text.substr(i, 12).split(emojiExp) || [])[1] || \"\").length || 2;\n\t      splitText += chars && character !== \" \" ? charStart() + text.substr(i, j) + \"</\" + tag + \">\" : text.substr(i, j);\n\t      i += j - 1;\n\t    } else {\n\t      splitText += chars && character !== \" \" ? charStart() + character + \"</\" + tag + \">\" : character;\n\t    }\n\t  }\n\n\t  element.outerHTML = splitText + (wordIsOpen ? wordEnd : \"\");\n\t  hasTagStart && _swapText(parent, \"{{LT}}\", \"<\");\n\t},\n\t    _split = function _split(element, vars, wordStart, charStart) {\n\t  var children = _toArray(element.childNodes),\n\t      l = children.length,\n\t      absolute = _isAbsolute(vars),\n\t      i,\n\t      child;\n\n\t  if (element.nodeType !== 3 || l > 1) {\n\t    vars.absolute = false;\n\n\t    for (i = 0; i < l; i++) {\n\t      child = children[i];\n\t      child._next = child._isFirst = child._parent = child._wordEnd = null;\n\n\t      if (child.nodeType !== 3 || /\\S+/.test(child.nodeValue)) {\n\t        if (absolute && child.nodeType !== 3 && _getComputedStyle(child).display === \"inline\") {\n\t          child.style.display = \"inline-block\";\n\t          child.style.position = \"relative\";\n\t        }\n\n\t        child._isSplit = true;\n\n\t        _split(child, vars, wordStart, charStart);\n\t      }\n\t    }\n\n\t    vars.absolute = absolute;\n\t    element._isSplit = true;\n\t    return;\n\t  }\n\n\t  _splitRawText(element, vars, wordStart, charStart);\n\t};\n\n\tvar SplitText = function () {\n\t  function SplitText(element, vars) {\n\t    _coreInitted || _initCore();\n\t    this.elements = _toArray(element);\n\t    this.chars = [];\n\t    this.words = [];\n\t    this.lines = [];\n\t    this._originals = [];\n\t    this.vars = vars || {};\n\n\t    _context(this);\n\n\t     this.split(vars);\n\t  }\n\n\t  var _proto = SplitText.prototype;\n\n\t  _proto.split = function split(vars) {\n\t    this.isSplit && this.revert();\n\t    this.vars = vars = vars || this.vars;\n\t    this._originals.length = this.chars.length = this.words.length = this.lines.length = 0;\n\n\t    var i = this.elements.length,\n\t        tag = vars.tag ? vars.tag : vars.span ? \"span\" : \"div\",\n\t        wordStart = _cssClassFunc(vars.wordsClass, tag),\n\t        charStart = _cssClassFunc(vars.charsClass, tag),\n\t        origHeight,\n\t        origWidth,\n\t        e;\n\n\t    while (--i > -1) {\n\t      e = this.elements[i];\n\t      this._originals[i] = e.innerHTML;\n\t      origHeight = e.clientHeight;\n\t      origWidth = e.clientWidth;\n\n\t      _split(e, vars, wordStart, charStart);\n\n\t      _setPositionsAfterSplit(e, vars, this.chars, this.words, this.lines, origWidth, origHeight);\n\t    }\n\n\t    this.chars.reverse();\n\t    this.words.reverse();\n\t    this.lines.reverse();\n\t    this.isSplit = true;\n\t    return this;\n\t  };\n\n\t  _proto.revert = function revert() {\n\t    var originals = this._originals;\n\n\t    if (!originals) {\n\t      throw \"revert() call wasn't scoped properly.\";\n\t    }\n\n\t    this.elements.forEach(function (e, i) {\n\t      return e.innerHTML = originals[i];\n\t    });\n\t    this.chars = [];\n\t    this.words = [];\n\t    this.lines = [];\n\t    this.isSplit = false;\n\t    return this;\n\t  };\n\n\t  SplitText.create = function create(element, vars) {\n\t    return new SplitText(element, vars);\n\t  };\n\n\t  return SplitText;\n\t}();\n\tSplitText.version = \"3.12.2\";\n\tSplitText.register = _initCore;\n\n\texports.SplitText = SplitText;\n\texports.default = SplitText;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"],
  "mappings": "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",
  "names": ["exports", "_initCore", "_getComputedStyle", "_isAbsolute", "_findSpecialChars", "_cssClassFunc", "_swapText", "_pushReversed", "_isBeforeWordDelimiter", "_deWordify", "_getStyleAsNumber", "_setPositionsAfterSplit", "_splitRawText", "_split", "SplitText"]
}
